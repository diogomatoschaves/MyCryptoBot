FROM --platform=linux/amd64 python:3.8-slim

ARG EXECUTION_APP_URL
ARG APP_NAME
ARG SECRET_KEY
ARG AWS_ACCESS_KEY_ID
ARG AWS_SECRET_ACCESS_KEY
ARG AWS_BUCKET
ARG USE_CLOUD_STORAGE

# Keeps Python from generating .pyc files in the container
ENV PYTHONDONTWRITEBYTECODE 1
# Turns off buffering for easier container logging
ENV PYTHONUNBUFFERED 1

ENV DIRECTORY model

ENV POETRY_HOME /opt/poetry

# Install and setup poetry
RUN pip install -U pip \
    && apt-get update \
    && yes | apt-get install libpq-dev \
    && apt install -y curl netcat-traditional \
    && curl -sSL https://install.python-poetry.org | python - --version 1.7.1 \
    && pip install psycopg2-binary==2.8.6
ENV PATH="$POETRY_HOME/bin:$PATH"

COPY $DIRECTORY/poetry.lock $DIRECTORY/pyproject.toml /

RUN poetry config virtualenvs.create false \
  && poetry install --no-interaction --no-ansi --only main

WORKDIR /usr/src/app

COPY ./proj.conf ./
COPY ./database/ ./database/
COPY ./$DIRECTORY/ ./$DIRECTORY/
COPY ./shared/ ./shared/

RUN useradd -m myuser
USER myuser

ENV PYTHONPATH="${PYTHONPATH}:/usr/src/app/"

ENV EXECUTION_APP_URL=$EXECUTION_APP_URL
ENV APP_NAME=$APP_NAME
ENV SECRET_KEY=$SECRET_KEY
ENV AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
ENV AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
ENV AWS_BUCKET=$AWS_BUCKET
ENV USE_CLOUD_STORAGE=$USE_CLOUD_STORAGE

CMD python $DIRECTORY/worker.py